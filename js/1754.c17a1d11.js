(self.webpackChunk_varlet_ui=self.webpackChunk_varlet_ui||[]).push([[1754],{1754:(s,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>l});var d=a(7875),e={class:"varlet-site-doc"},n=(0,d.uE)('<h1>IndexBar 索引栏</h1><div class="card"><h3>介绍</h3><p>用于跳转到页面指定位置。</p></div><div class="card"><h3>引入</h3><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { createApp } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n<span class="hljs-keyword">import</span> { IndexBar, IndexAnchor } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;@varlet/ui&#39;</span>\n\ncreateApp().use(IndexBar).use(IndexAnchor)\n</code></pre></div><div class="card"><h3>基本使用</h3><p>点击索引栏时，会自动跳转到对应的 <code>IndexAnchor</code> 锚点位置。</p><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-tag">&lt;<span class="hljs-name">var-index-bar</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;change&quot;</span> <span class="hljs-attr">duration</span>=<span class="hljs-string">&quot;300&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;item in list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-index-anchor</span> \n      <span class="hljs-attr">:index</span>=<span class="hljs-string">&quot;item&quot;</span> \n      <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;var-index-anchor__example&quot;</span>\n    &gt;</span> \n      标题 {{ item }} \n    <span class="hljs-tag">&lt;/<span class="hljs-name">var-index-anchor</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-cell</span>&gt;</span>{{ item }} 文本<span class="hljs-tag">&lt;/<span class="hljs-name">var-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-cell</span>&gt;</span>{{ item }} 文本<span class="hljs-tag">&lt;/<span class="hljs-name">var-cell</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">var-cell</span>&gt;</span>{{ item }} 文本<span class="hljs-tag">&lt;/<span class="hljs-name">var-cell</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">var-index-bar</span>&gt;</span>\n</code></pre><pre class="hljs"><code><link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.3.2/styles/color-brewer.min.css"><span class="hljs-keyword">import</span> { ref, onMounted } <span class="hljs-keyword">from</span> <span class="hljs-string">&#39;vue&#39;</span>\n\n  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n    <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n      <span class="hljs-keyword">const</span> list = ref([])\n\n      onMounted(<span class="hljs-function">() =&gt;</span> {\n        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">26</span>; i++) {\n          list.value.push(<span class="hljs-built_in">String</span>.fromCharCode(<span class="hljs-number">65</span> + i))\n        }\n      })\n\n      <span class="hljs-keyword">const</span> change = <span class="hljs-function">(<span class="hljs-params">value</span>) =&gt;</span> {\n        <span class="hljs-built_in">console</span>.log(value)\n      }\n\n      <span class="hljs-keyword">return</span> {\n        list,\n        change\n      }\n    }\n  }\n</code></pre></div><h2>API</h2><div class="card"><h3>属性</h3></div><div class="card"><h3>IndexBar 属性</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>sticky</code></td><td>是否开启锚点吸顶</td><td><em>boolean</em></td><td><code>true</code></td></tr><tr><td><code>sticky-offset-top</code></td><td>锚点吸顶时与顶部的距离</td><td><em>number</em></td><td><code>0</code></td></tr><tr><td><code>hide-list</code></td><td>是否隐藏锚点列表</td><td><em>boolean</em></td><td><code>false</code></td></tr><tr><td><code>z-index</code></td><td>z-index 层级</td><td><em>number | string</em></td><td><code>1</code></td></tr><tr><td><code>highlight-color</code></td><td>索引字符高亮颜色</td><td><em>string</em></td><td><code>#ee0a24</code></td></tr><tr><td><code>duration</code></td><td>动画持续时间</td><td><em>string | number</em></td><td><code>0</code></td></tr></tbody></table></div><div class="card"><h3>IndexAnchor 属性</h3><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td><code>index</code></td><td>索引字符</td><td><em>number | string</em></td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>事件</h3></div><div class="card"><h3>IndexBar 事件</h3><table><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td><code>click</code></td><td>点击索引栏的字符时触发</td><td><code>index: number | string</code></td></tr><tr><td><code>change</code></td><td>当前高亮的索引字符变化时触发</td><td><code>index: number | string</code></td></tr></tbody></table></div><div class="card"><h3>插槽</h3></div><div class="card"><h3>IndexAnchor 插槽</h3><table><thead><tr><th>名称</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>default</code></td><td>自定义索引字符</td><td><code>-</code></td></tr></tbody></table></div><div class="card"><h3>方法</h3><p>通过 ref 可以获取到 IndexBar 实例并调用实例方法</p><table><thead><tr><th>方法名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td><code>scrollTo</code></td><td>滚动到指定锚点</td><td><code>index: number | string</code></td></tr></tbody></table></div><div class="card"><h3>样式变量</h3><p>以下为组件使用的css变量,可以使用<a href="#/zh-CN/style-provider">StyleProvider组件</a>进行样式定制</p><table><thead><tr><th>变量名</th><th>默认值</th></tr></thead><tbody><tr><td><code>--index-bar-list-item-font-size</code></td><td><code>var(--font-size-xs)</code></td></tr><tr><td><code>--index-bar-list-item-color</code></td><td><code>var(--color-primary)</code></td></tr><tr><td><code>--index-bar-list-item-active-color</code></td><td><code>var(--color-danger)</code></td></tr><tr><td><code>--index-bar-list-item-height</code></td><td><code>14px</code></td></tr><tr><td><code>--index-bar-list-item-padding</code></td><td><code>0 10px</code></td></tr></tbody></table></div>',14);const l={render:function(s,t){return(0,d.wg)(),(0,d.j4)("div",e,[n])}}}}]);